b7e7faeb143fe0fc18cfeeb4f1048fc806d4af5e:{"content":{"Google Video Nasties Are Signs of Far Deeper Malaise":"Google is battling a storm in the U.K., where hundreds of big advertisers from McDonald&apos;s Corp. to Tesco Plc have suspended marketing on its sites because of fears that their messages may be displayed near\u00a0offensive content.\nNew measures announced by the Alphabet Inc. unit fall way short of tackling the problem. They give advertisers a bit more control over where their ads appear on YouTube and on the Google network that places ads around the web. But all the tools are made by Google itself, leaving the world&apos;s biggest seller of advertising to police itself.\nIt would be much better to let advertisers, and their agencies, use independent software to verify that campaigns aren&apos;t sitting next to unpleasant\u00a0content. Google and Facebook Inc. have -- grudgingly -- opened up a tad to such third-party auditors, such as to check whether video ads are really seen and for how long. Yet they\u00a0could do much more.\nIn reality, they don&apos;t really want to clamp down since more controls reduce ad inventory and add to their costs. (As Gadfly colleague Shira Ovide points out, the tech giants&apos; biggest enemy is hubris.)\nBetter verification methods can add about 2 percent to the cost of an online ad campaign,\u00a0according to a WPP-owned digital agency. But they protect brands by excluding inventory from sketchy sites featuring porn or extremist articles and\u00a0videos. They can also weed out fraud, or when criminals use robots to generate fake page views. About one-fifth of the $80 billion spent on digital ads, excluding search, could be lost to such fraud, according to recent studies.\nIn the U.K., the present\u00a0ruckus started in February when The Times of London\u00a0showed\u00a0video ads from big brands and government agencies were running alongside jihadist and neo-Nazi content. The stories prompted hearings in Parliament and outraged statements from companies unhappy to be accused of bankrolling such outfits with ad dollars.\nThese issues have been around for years, of course, but there&apos;s little doubt that the honeymoon for online advertising is over. More marketing dollars are being spent online than ever, and automated systems are used to auction off space with little human oversight.\u00a0Marketers specify a target audience, such as 30-something male car-buyers in Scotland, but they have no idea where their campaigns\u00a0will actually show up.\u00a0\nAll this has led big brand owners such as Procter & Gamble Co. to question the effectiveness\u00a0of web spending. They&apos;re threatening to cut off online outlets that don&apos;t weed out \"crappy\" ads and fraud.\nU.S. digital advertising prices are rising five times faster than inflation, and much faster than television ads, according to a study from Adobe Systems Inc.\nYet people spend less time on each website than before, perhaps because they&apos;re surfing from small screens on phones. Brands in the U.S. have doubled spending on search ads -- long seen as the best form of online marketing -- but it has only brought them\u00a0an 11 percent increase in traffic, the Adobe data show.\nThe data don&apos;t have quite the same shock factor as stories about Mercedes inadvertently bankrolling Islamic extremist preachers through YouTube ads. But the two problems show\u00a0an unhealthy online ad market where brands are throwing away an awful lot of money.\nThis column does not necessarily reflect the opinion of Bloomberg LP and its owners.\n\n\nTo contact the author of this story:      Leila Abboud in    Paris at labboud@bloomberg.net\nTo contact the editor responsible for this story:               James Boxell at jboxell@bloomberg.net\n","Google Overhauls Policies After Uproar Over YouTube Videos":"Google is giving marketers more control over their online ads after a slew of brands halted spending in the U.K. over concerns about offensive content.\nThe Alphabet Inc. unit also expanded its definition of hate speech under its advertising policy to include vulnerable groups, which includes those discriminated against because of their identity, socioeconomic class or country of origin. The new policies apply to the YouTube online video service and Google\u2019s expansive network that serves ads across the web.\n\"We know advertisers don\u2019t want their ads next to content that doesn\u2019t align with their values. So starting today, we\u2019re taking a tougher stance on hateful, offensive and derogatory content,\" Philipp Schindler, Google\u2019s chief business officer, wrote in a blog announcing the changes late Monday night.\nThe moves are aimed at rebutting criticism the search giant has not done enough to curb hate speech online, but they also thrust Google further into a heated public debate over censorship and political ideologies.\u00a0\nThe new policies mark a sharp turn for Google, which has historically largely hewed to its position as a neutral host of outside sources of online content. However, as the company has grabbed a greater share of digital advertising -- and bids for more television ad dollars -- criticism of its stance has grown.\u00a0This came to a head in recent days after the London-based Times newspaper reported ads from marquee brands in the U.K. were running with videos that promoted terrorism or anti-Semitism. Several marketers pulled their ads from Google properties in the country in response.\n\u201cWe have strict policies that define where Google ads should appear, and in the vast majority of cases, our policies and tools work as intended,\u201d Schindler wrote. \u201cBut at times we don\u2019t get it right.\u201d\nAltice NV Chief Executive Officer Michel Combes said the two issues that must be resolved are data privacy, including the capacity to respect different rules across countries, and ad placement, \u201cto avoid what we have seen lately. In the future, these two elements will be absolutely crucial to build confidence.\u201d \nAltice announced Tuesday that it bought video advertising service Teads, a purchase which could allow the Netherlands-based telecom company founded by billionaire Patrick Drahi to reach ad sales of several billion euros in a few years.\nGoogle\u2019s changes give advertisers two key new capabilities. The first introduces a default setting for those starting a marketing campaign. When they sign up, Google will automatically exclude websites and videos deemed \"potentially objectionable.\"\u00a0\nThe second feature offers more granular control over where advertisers place ads. That will make it easier to exclude content and for advertisers to fine-tune where they want their ads to appear.\nWith each tweak, Google hopes to give advertisers more responsibility over where their ads show up online. The rise of automated, or programmatic, ad-serving has complicated this process. Of course, Google, the world\u2019s largest digital advertiser, has been one of the biggest beneficiaries of this trend.\nAdditionally, Google is bringing more safeguards for advertisers against spam video accounts on YouTube, while increasing staff to enforce its content policies for advertising.\nThe more dramatic Google decision, however, involves online speech.\u00a0Its prior ads policy was fairly boilerplate, restricting content that contains harassment and incites violence against groups based on race, religion or gender identity. The company said it\u2019s broadening what statements it considers incendiary to include speech it defines as humiliating and demeaning to targeted groups. For example, that could affect websites that talk about how women shouldn\u2019t shouldn\u2019t learn math or belong in the kitchen.\nThe timing and implementation of the new policies is still being set, a spokeswoman said. Eventually, Google plans to disable ads based on these criteria on individual web pages rather than entire publications, the spokeswoman added.\nGroupM, the world\u2019s largest media investment group, said it \u201cwelcomes the commitments\u201d as they would improve safety for brands if delivered.\n\u201cWe look forward to the details about the tools and a sense of what improvement benchmarks we should expect,\u201d GroupM said in a statement. \u201cWe also hope for quick delivery of the tools that can be deployed, as many thousands of campaigns are involved.\u201d\nThe ad boycott in the U.K. came amid growing anxiety among publishers and media buyers about Google and Facebook Inc.\u2019s rising share of the digital ad market. Google faces multiple antitrust investigations in the European Union, with several publishers and advertisers in the region complaining about its power. The U.K. accounted for $7.8 billion of Alphabet\u2019s sales in 2016, or 8.6 percent.\nBrian Wieser, an analyst at Pivotal Research Group, downgraded Alphabet stock on Monday in response to the British boycott. \"Google faces a hostile industry of media owners in Europe,\" he wrote before Google\u2019s policy changes. \"We expect they will be all too happy to highlight future brand safety failings.\"\nThe sharp response from Google\u2019s advertisers is also due to the political climate, marketing buyers said. Both Google and Facebook have taken steps to cut funding for sites that spread hate speech and misinformation after the controversial aftermath of the U.S. election. But they are both still criticized for falling short. Advertisers, meanwhile, are increasingly concerned with staying out of any political conflicts.\n\"We\u2019re just in a very divisive time,\" said Sam Bloom, general manager for Camelot Communications, a firm that works with media buyers. \"No brand wants to get the Scarlet Letter.\"\n","Google Cancels Some Fiber Internet Installations in Kansas City":"Google Fiber, the gigabit-speed internet service rolled out by Alphabet Inc., is canceling some installations in Kansas City, the latest setback for the high-profile initiative.\nThe search giant is sending out refunds to residents that won\u2019t be getting the service they signed up for. The metropolitan area, which straddles the border of Kansas and Missouri, was the first market for the superfast service when it debuted in 2012 and remains Fiber\u2019s largest.\n\u201cAlthough we\u2019ve been working hard to bring you service, we\u2019re unable to build our network to connect your home or business at this time,\u201d Google Fiber said in an email to affected consumers. \u201cUnfortunately, that means we\u2019ll need to cancel your Fiber account.\u201d\nGoogle Fiber once was one of Alphabet\u2019s most trumpeted projects, as it signaled ambitions to go head-to-head with cable and phone companies to offer internet access and bolster its main search business. Since its launch, the company overall has put a new emphasis on financial discipline under Chief Financial Officer Ruth Porat. For Fiber, that has meant scaled back expansion, staffers cut and hundreds of workers shifted to Alphabet\u2019s core web business.\nAlphabet\u2019s tamping down of its Fiber goals comes at a time when some in Kansas City are disappointed with the lackluster effect the high-speed service has had on areas such as the local economy, the amount of venture-capital funding or the creation of breakout startups.\nOther Bets, the part of Alphabet that Google Fiber belongs to, had an operating loss of $3.58 billion last year on revenue of $809 million. Alphabet\u00a0overall remains highly profitable.\nThe company said it will provide refunds on customer deposits, typically $10, within the next two weeks. Those who already have the fiber service can keep it.\nSeveral hundred people, many of whom paid deposits years ago, are affected, said a person familiar with the situation. In markets Google Fiber entered after Kansas City, it was more careful about accepting deposits only for buildings it believed it could connect in coming quarters, the person said, asking not to be identified as the details are private. Fiber is currently in nine locations around the U.S.\nIt is unclear if the affected group includes low-income customers, who Google had pledged to connect for free.\nNews of the canceled installations was first reported by Kansas City TV station KSHB.\n"},"address":"/Users/zhaozinian/Documents/UNIVERSITY/FYP/NEWS/Bloomberg-Google-2017-03-23--1m.json","subject":"Google"}